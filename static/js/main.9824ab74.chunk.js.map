{"version":3,"sources":["constants.js","util/NamingUtils.js","objects/Scale.js","components/ScaleDiagram.js","pages/ScaleExplorer.js","App.js","reportWebVitals.js","index.js"],"names":["SCALE_FAMILIES","name","intervals","modes","CHORD_TYPES","NOTES","names","STANDARD_TUNING","getChordName","notes","current","naming","lastIndex","i","length","next","value","ext","extensions","seventh","getNameFromMap","res","semitones","getSemitonesBetweenNotes","push","getIntervalsBetweenNotesOfChord","a","b","Scale","root","family","offset","this","init","nts","Number","j","index","startIndex","indices","noots","getNote","type","result","getChord","margin","fretheight","stringOffset","ScaleDiagram","ommits","tuning","lines","fretsDisplayed","x1","x2","y1","y2","className","generateLines","dots","string","base","stringCount","fret","note","includes","indexOf","r","cx","cy","x","y","textAnchor","generateDots","numbers","forEach","n","circleRadius","generateNumbers","viewBox","width","height","class","ScaleExplorer","useState","scale","setScale","setFamily","setRoot","mode","setMode","setOmmits","triads","setTriads","sevenths","setSevenths","ninths","setNinths","useEffect","s","updateScale","getChordsOfType","onChange","e","target","map","selected","fam","onClick","o","splice","console","log","toggleOmmit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9824ab74.chunk.js","sourcesContent":["export const SCALE_FAMILIES = [\r\n    {name:\"Major\", intervals:[2,2,1,2,2,2,1], modes:[\"Major/Ionian\", \"Dorian\", \"Phrygian\", \"Lydian\", \"Mixolydian\", \"Natural Minor/Aeolian\", \"Locrian\"]},\r\n    {name:\"Melodic Minor\", intervals:[2,1,2,2,2,2,1], modes:[\"Melodic Minor\", \"Dorian b2\", \"Lydian Aug.\", \"Lydian dom.\", \"Aeo. dom.\", \"Half diminished\", \"Alt.\"]},\r\n    {name:\"Harmonic Minor\", intervals:[2,1,2,2,1,3,1], modes:[\"Harmonic Minor\", \"Locrian nat. 6\", \"Major #5\", \"Doroam #4\", \"Phrygian dom.\", \"Lydian #2\", \"Alt. dom. bb7\"]},\r\n    {name:\"Harmonic Major\", intervals:[2,2,1,2,1,3,1], modes:[\"Harmonic Major\", \"Dorian b5\", \"Phrygian b4\", \"Lydian b3\", \"Mixo. b2\", \"Lydian Augmented #2\", \"Locrian bb7\"]},\r\n    {name:\"Diminished\", intervals:[2,1,2,1,2,1,2,1], modes:[\"Diminished\", \"Inverted Diminished\"]},\r\n    {name:\"Whole Tone\", intervals:[2,2,2,2,2,2], modes:[\"Whole Tone\"]},\r\n    {name:\"Augmented\", intervals:[3,1,3,1,3,1], modes:[\"Augmented\", \"Inverted Augmented\"]}\r\n]\r\n\r\nexport const CHORD_TYPES = {\r\n    triad:[0,2,4],\r\n    seventh:[0,2,4,6],\r\n    ninth:[0,2,4,6,8]\r\n}\r\n\r\nexport const NOTES = [\r\n    {names: [\"A\"]},\r\n    {names: [\"A#\", \"Bb\"]},\r\n    {names: [\"B\", \"Cb\"]},\r\n    {names: [\"C\", \"B#\"]},\r\n    {names: [\"C#\", \"Db\"]},\r\n    {names: [\"D\"]},\r\n    {names: [\"D#\", \"Eb\"]},\r\n    {names: [\"E\", \"Fb\"]},\r\n    {names: [\"F\", \"E#\"]},\r\n    {names: [\"F#\", \"Gb\"]},\r\n    {names: [\"G\"]},\r\n    {names: [\"G#\", \"Ab\"]}\r\n]\r\n\r\nexport const STANDARD_TUNING = [7, 0, 5, 10, 2, 7];","import naming from \"../json/naming.json\";\r\nimport extensions from \"../json/extensions.json\";\r\n\r\nexport function getChordName(notes) {\r\n    let intervals = getIntervalsBetweenNotesOfChord(notes);\r\n    return getNameFromMap(intervals);\r\n}\r\n\r\nfunction getSemitonesBetweenNotes(a, b) {\r\n    if(a < b) {\r\n        return b - a;\r\n    } else {\r\n        return b + (12 - a);\r\n    }\r\n}\r\n\r\nfunction getIntervalsBetweenNotesOfChord(notes) {\r\n    let res = [];\r\n    for (let i = 1; i < notes.length; i++) {\r\n        let semitones = getSemitonesBetweenNotes(notes[0], notes[i]);\r\n        res.push(semitones);\r\n    }\r\n\r\n    return res;\r\n}\r\n\r\nfunction getNameFromMap(intervals) {\r\n    let current = naming;\r\n    let lastIndex = 0;\r\n    let val = \"\";\r\n    for(let i = 0; i < intervals.length; i++) {\r\n        let interval = intervals[i];\r\n        let next = current[interval];\r\n        if(!next) {\r\n            lastIndex = i;\r\n            break;\r\n        }\r\n        current = next;\r\n    }\r\n\r\n    if(lastIndex === 0) {\r\n        return current.value;\r\n    }\r\n\r\n    var ext = extensions.seventh[intervals[lastIndex]]\r\n    \r\n\r\n    return current.value + ext;\r\n}","import { NOTES } from \"../constants\";\r\nimport { getChordName } from \"../util/NamingUtils\";\r\n\r\nexport class Scale{\r\n    constructor(root, family, offset = 0) {\r\n        this.root = root;\r\n        this.family = family;\r\n        this.offset = offset;\r\n        this.notes = []\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        let nts = [];\r\n        nts[0] = Number(this.root);\r\n        for (let i = 0; i < this.family.intervals.length; i++) {\r\n            let j = (this.offset + i) % this.family.intervals.length;\r\n            nts.push((Number(nts[i]) + Number(this.family.intervals[j])) % 12);\r\n        }\r\n\r\n        this.notes = nts;\r\n    }\r\n\r\n    //get note by index, including out of range indices. this also ignores the last (doubled) note in the scale\r\n    getNote(index) {\r\n        return this.notes[index % (this.notes.length - 1)];\r\n    }\r\n\r\n    getChord(startIndex, indices) {\r\n        let noots = [];\r\n        for (let i = 0; i < indices.length; i++) {\r\n            const index = indices[i];\r\n            noots.push(this.getNote(index + startIndex));\r\n        }\r\n\r\n        return {name:NOTES[this.notes[startIndex]].names[0] + getChordName(noots), notes: noots};\r\n    }\r\n\r\n    getChordsOfType(type) {\r\n        let result = [];\r\n        for (let i = 0; i < this.notes.length - 1; i++) {\r\n            result.push(this.getChord(i, type));\r\n        }\r\n\r\n        return result;\r\n    }\r\n}","import { NOTES, STANDARD_TUNING } from \"../constants\";\r\n\r\nconst fretsDisplayed = 13;\r\nconst margin = {top:50,bottom:50, left:50, right:50};\r\nconst fretheight = 46;\r\nconst stringCount = 6;\r\nconst stringOffset = 25;\r\nconst circleRadius = 12;\r\n\r\nconst title = {\r\n    fontWeight:500\r\n}\r\n\r\nconst circle = {\r\n    fill:\"#212121\"\r\n}\r\n\r\nconst rootCircle = {\r\n    fill:\"#E75915\"\r\n}\r\n\r\nconst subtext = {\r\n    fontWeight:500,\r\n    fill:\"#fff\"\r\n}\r\n\r\nconst line = {\r\n    stroke:\"#333333\",\r\n    strokeWidth:2\r\n}\r\n\r\nconst nut = {\r\n    stroke:\"#000000\",\r\n    strokeWidth:7\r\n}\r\n\r\nconst halfnut = {\r\n    stroke:\"#323232\",\r\n    strokeWidth:4\r\n}\r\n\r\nexport default function ScaleDiagram({notes, ommits, tuning = STANDARD_TUNING}) {\r\n    const lines = generateLines();\r\n    const dots = generateDots();\r\n    const numbers = generateNumbers();\r\n\r\n\r\n    function generateLines() {\r\n        let lines = [];\r\n        for (let i = 1; i < fretsDisplayed + 1; i++) {\r\n            lines.push(<line x1={margin.left + (i*fretheight)} x2={margin.left + (i*fretheight)} y1={margin.top} y2={margin.top + stringOffset * (stringCount - 1)} />)\r\n        }\r\n        \r\n        for (let i = 0; i < stringCount; i++) {\r\n            lines.push(<line x1={margin.left} x2={margin.left + fretsDisplayed*fretheight} y1={margin.top + i * stringOffset} y2={margin.top + i * stringOffset}/>)    \r\n        }\r\n        lines.push(<line className=\"nut\" x1={margin.left} x2={margin.left} y1={margin.top - 2} y2={margin.top + (stringOffset * (stringCount - 1)) + 2} />);\r\n        lines.push(<line className=\"halfnut\" x1={margin.left + fretheight * 12} x2={margin.left + fretheight * 12} y1={margin.top - 2} y2={margin.top + (stringOffset * (stringCount - 1)) + 2} />);\r\n        return lines;\r\n    }\r\n\r\n    function generateDots() {\r\n        if(!tuning || !notes) return [];\r\n        let dots = [];\r\n        for (let string = 0; string < stringCount; string++) {\r\n            const base = tuning[(stringCount - 1) - string];\r\n            for (let fret = 0; fret < fretsDisplayed; fret++) {\r\n                let note = (base + fret) % 12;\r\n                if (notes.includes(note) && !ommits.includes(notes.indexOf(note))) {\r\n                    if (fret === 0) {\r\n                        dots.push(<circle r={circleRadius} cx={(margin.left - fretheight/2.8)} cy={margin.top + string * stringOffset} className={note === notes[0] ? \"rootCircle\" : \"circle\"}/>);\r\n                        dots.push(<text className=\"subtext\" x={(margin.left - fretheight/2.8)} y={margin.top + string * stringOffset + 3} textAnchor={\"middle\"}>{NOTES[note].names[0]}</text>);\r\n                    } else {\r\n                        dots.push(<circle r={circleRadius} cx={(margin.left + fret * fretheight - fretheight/2)} cy={margin.top + string * stringOffset} className={note === notes[0] ? \"rootCircle\" : \"circle\"}/>)\r\n                        dots.push(<text className=\"subtext\" x={(margin.left + fret * fretheight - fretheight/2)} y={margin.top + string * stringOffset + 3} textAnchor={\"middle\"}>{NOTES[note].names[0]}</text>);\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n        return dots\r\n    }\r\n\r\n    function generateNumbers() {\r\n        let numbers = [];\r\n        const nums = [1,3,5,7,9,12];\r\n\r\n        nums.forEach(n => {\r\n            numbers.push(<text textAnchor={\"middle\"} x={margin.left + (fretheight * n) - fretheight/2} y={margin.top + stringOffset*6 + margin.bottom / 2} className=\"fretNumber\">{n}</text>);\r\n            \r\n            if(n === 12) {\r\n                numbers.push(<circle r={circleRadius/2} className=\"boardDot\" cx={margin.left + (fretheight * n) - fretheight/2} cy={margin.top + stringOffset*1.5}></circle>)\r\n                numbers.push(<circle r={circleRadius/2} className=\"boardDot\" cx={margin.left + (fretheight * n) - fretheight/2} cy={margin.top + stringOffset*3.5}></circle>)\r\n            } else {\r\n                numbers.push(<circle r={circleRadius/2} className=\"boardDot\" cx={margin.left + (fretheight * n) - fretheight/2} cy={margin.top + stringOffset*2.5}></circle>)\r\n            }\r\n        })\r\n\r\n        return numbers;\r\n    }\r\n\r\n    return <svg viewBox={\"0 0 \"+(margin.left + (fretheight * fretsDisplayed) + margin.right)+\" \"+(margin.top + (stringOffset * (stringCount - 1)) + margin.bottom)}  /* width={margin.left + (fretheight * fretsDisplayed) + margin.right} height={margin.top + (stringOffset * (stringCount - 1)) + margin.bottom} */>\r\n        {/* <rect width={margin.left+fretheight * fretsDisplayed+margin.right} height={margin.top+stringOffset * (stringCount - 1)+margin.bottom}  style={{fill:\"#888\"}}/> */}\r\n        <rect y={margin.top} x={margin.left} width={fretheight * fretsDisplayed} height={stringOffset * (stringCount - 1)}  class=\"background\"/>\r\n        {numbers}\r\n        {lines}\r\n        {dots}\r\n    </svg>\r\n}","import { useEffect, useState } from \"react\"\r\nimport { CHORD_TYPES, NOTES, SCALE_FAMILIES, STANDARD_TUNING } from \"../constants\";\r\nimport { Scale } from \"../objects/Scale\";\r\nimport \"../stylesheets/explorer.scss\";\r\nimport ScaleDiagram from \"../components/ScaleDiagram\";\r\n\r\nexport default function ScaleExplorer() {\r\n    const [scale, setScale] = useState();\r\n    const [family, setFamily] = useState(SCALE_FAMILIES[0]);\r\n    const [root, setRoot] = useState(0);\r\n    const [mode, setMode] = useState(0);\r\n    const [ommits, setOmmits] = useState([]);\r\n\r\n    const [triads, setTriads] = useState([]);\r\n    const [sevenths, setSevenths] = useState([]);\r\n    const [ninths, setNinths] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        updateScale();\r\n    }, [family, root, mode])\r\n\r\n    useEffect(()=> {\r\n        if(scale) {\r\n            setTriads(scale.getChordsOfType(CHORD_TYPES.triad));\r\n            setSevenths(scale.getChordsOfType(CHORD_TYPES.seventh));\r\n            setNinths(scale.getChordsOfType(CHORD_TYPES.ninth));\r\n        }\r\n    }, [scale])\r\n\r\n    function updateScale() {\r\n        let s = new Scale(root, family, mode);\r\n        setScale(s);\r\n    }\r\n\r\n    function toggleOmmit(n) {\r\n        let o = [...ommits];\r\n        let i = o.indexOf(n);\r\n        if (i === -1) {\r\n            o.push(n);\r\n        } else {\r\n            o.splice(i,1);\r\n        }\r\n        setOmmits(o);\r\n        console.log(ommits);\r\n    }\r\n\r\n    return <div className=\"page\">\r\n        <div className=\"explorer\">\r\n            <div className=\"input\">\r\n                <label>\r\n                    Root: <br/>\r\n                    <select onChange={e=>setRoot(e.target.value)}>\r\n                        {\r\n                            NOTES.map((note, i) => <option key={i+\"n\"} value={i} selected={root === i ? \"selected\":null}>{note.names[0]}</option>)\r\n                        }\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    Scale Type:<br/> \r\n                    <select onChange={e=>setFamily(SCALE_FAMILIES[e.target.value])}>\r\n                        {\r\n                            SCALE_FAMILIES.map((fam, i) => <option key={i+\"f\"} value={i} selected={family.name === fam.name ? \"selected\":null}>{fam.name}</option>)\r\n                        }\r\n                    </select>\r\n                </label>\r\n                <label>\r\n                    Scale Type:<br/> \r\n                    <select onChange={e=>setMode(e.target.value)}>\r\n                        {\r\n                            family?.modes?.map((mode, i) => <option key={i+\"m\"} value={i} selected={mode === i ? \"selected\" : null}>{mode}</option>)\r\n                        }\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div className=\"scaleNotes\">\r\n                {\r\n                    scale?.notes?.map((n, i) => <span key={\"ommit\"+i}className={ommits.includes(i) ? \"ommit\" : \"\"} onClick={()=>toggleOmmit(i)}>{NOTES[n].names[0]} <h3>{i}</h3></span>)\r\n                }\r\n            </div>\r\n            <div className=\"scaleDiagram\">\r\n                {scale && <ScaleDiagram tuning={STANDARD_TUNING} ommits={ommits} notes={scale.notes}/>}\r\n            </div>\r\n            <div className=\"chords\">\r\n                <div className=\"repeater\">\r\n                    <h3>Triads</h3>\r\n                    <div className=\"chordelements\">\r\n                        {\r\n                            triads?.map((e,i) => ommits.includes(i) ? <></> : <span className=\"chord\" key={i+\"b3\"} /* onClick={()=>getDiagrams(e)} */>\r\n                                {e.name}\r\n                                <span className=\"notes\">{e.notes.map((n,j) => <span key={j+\"3\"+i} className=\"note\">{NOTES[n].names[0]}</span>)}</span>\r\n                            </span>)\r\n                        }        \r\n                    </div>\r\n                </div>\r\n                <div className=\"repeater\">\r\n                    <h3>Sevenths</h3>\r\n                    <div className=\"chordelements\">\r\n                        {\r\n                            sevenths?.map((e,i) => ommits.includes(i) ? <></> : <span className=\"chord\" key={i+\"b7\"} /* onClick={()=>getDiagrams(e)} */>\r\n                                {e.name}\r\n                                <span className=\"notes\">{e.notes.map((n,j) => <span key={j+\"7\"+i} className=\"note\">{NOTES[n].names[0]}</span>)}</span>\r\n                            </span>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"repeater\">\r\n                    <h3>Ninths</h3>\r\n                    <div className=\"chordelements\">\r\n                        {\r\n                            ninths?.map((e,i) => ommits.includes(i) ? <></> : <span className=\"chord\" key={i+\"b9\"} /* onClick={()=>getDiagrams(e)} */>\r\n                                {e.name}\r\n                                <span className=\"notes\">{e.notes.map((n,j) => <span key={j+\"9\"+i} className=\"note\">{NOTES[n].names[0]}</span>)}</span>\r\n                            </span>)\r\n                        }        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import ScaleExplorer from './pages/ScaleExplorer';\nimport './App.css';\nimport \"./stylesheets/colors.scss\";\nimport \"./stylesheets/page.scss\";\n\nfunction App() {\n  return <ScaleExplorer/>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}